-Xms128M:初始堆内存，默认是物理内存的1/64
-Xmx512M:最大堆内存，默认是物理内存1/4
-Xmn1024M:年轻代大小
-Xss1M:每个线程堆栈1M
-XX:NewRatio=4:年轻代(一个Eden和两个Survivor)与年老代的比值，此处年轻代与年老代比值为1:4
-XX:SurvivorRatio=4:年轻代中SurvivorRatio的比值，此处Eden和SurvivorRatio比值为4:2
-XX:PermSize=64M:非堆内存初始值,默认1/64
-XX:MaxPermSize=128M:最大非堆内存
-XX:MaxTenuringThreshold=0:设置垃圾最大年龄。如果设置为0的话，则年轻代对象不经过Survivor区，直接进入年老代。对于年老代比较多的应用，可以提高效率。如果将此值设置为一个较大值，则年轻代对象会在Survivor区进行多次复制，这样可以增加对象再年轻代的存活时间，增加在年轻代即被回收的概论。
-XX:+UseParallelGC:并发执行GC
-XX:+UseConcMarkSweepGC 这个参数表示对于老年代的回收采用CMS算法

gc log相关参数：
-XX:+PrintGCDetails
-XX:+PrintHeapAtGC
-XX:+PrintGCDateStamps
-XX:+PrintTenuringDistribution
-verbose:gc
-Xloggc:logs/gc.log

http://unixboy.iteye.com/blog/174173/

java 8: permGen vs metaspace
