查看系统内存使用情况，缺省单位为KB
free命令各字段的含义，示例：
free -m
             total       used       free     shared    buffers     cached
Mem:          7868       7393        475          0        115       2295
-/+ buffers/cache:       4982       2886
Swap:         4095       3387        708

swap不再赘述

第1行用×1表示，第2行用×2表示：
total1： 表示物理内存总量。
used1： 表示总计分配给缓存（包含buffers 与cache ）使用的数量，但其中可能部分缓存并未实际使用。 可以简单理解为已分配内存
free1： 未被分配的内存。 
shared1： 共享内存，一般系统不会用到，这里也不讨论。 
buffers1： 系统分配但未被使用的buffers 数量。 
cached1： 系统分配但未被使用的cache 数量。buffer 与cache 的区别见后面。 
used2:实际使用的buffers 与cache 总量，也是实际使用的内存总量。
free2：未被 使用的buffers 与cache 和未被分配的内存之和，这就是系统当前实际可用内存。

可以整理出如下等式：
total1 = used1 + free1
total1 = used2 + free2
used1 = buffers1 + cached1 + used2
free2 = buffers1 + cached1 + free1

cache 和 buffer的区别： 
Cache： 高速缓存，是位于CPU与主内存间的一种容量较小但速度很高的存储器。由于CPU的速度远高于主内存，CPU直接从内存中存取数据要等待一定时间周 期，Cache中保存着CPU刚用过或循环使用的一部分数据，当CPU再次使用该部分数据时可从Cache中直接调用,这样就减少了CPU的等待时间,提 高了系统的效率。Cache又分为一级Cache(L1 Cache)和二级Cache(L2 Cache)，L1 Cache集成在CPU内部，L2 Cache早期一般是焊在主板上,现在也都集成在CPU内部，常见的容量有256KB或512KB L2 Cache。 
Buffer：缓冲区，一个用于存储速度不同步的设备或优先级不同的设备之间传输数据的区域。通过缓冲区，可以使进程之间的相互等待变少，从而使从速度慢 的设备读入数据时，速度快的设备的操作进程不发生间断。 
缓冲（buffers）是根据磁盘的读写设计的，把分散的写操作集中进行，减少磁盘碎片和硬盘的反复寻道，从而提高系统性能。linux有一个守护进程定 期清空缓冲内容（即写如磁盘），也可以通过sync命令手动清空缓冲。举个例子吧：我这里有一个ext2的U盘，我往里面cp一个3M的MP3，但U盘的 灯没有跳动，过了一会儿（或者手动输入sync）U盘的灯就跳动起来了。卸载设备时会清空缓冲，所以有些时候卸载一个设备时要等上几秒钟。 
修改/etc/sysctl.conf中的vm.swappiness右边的数字可以在下次开机时调节swap使用策略。该数字范围是0～100，数字越 大越倾向于使用swap。默认为60，可以改一下试试。 
两者都是RAM中的数据。简单来说，buffer是即将要被写入磁盘的，而cache是被从磁盘中读出来的。 
buffer是由各种进程分配的，被用在如输入队列等方面，一个简单的例子如某个进程要求有多个字段读入，在所有字段被读入完整之前，进程把先前读入的字 段放在buffer中保存。 
cache经常被用在磁盘的I/O请求上，如果有多个进程都要访问某个文件，于是该文件便被做成cache以方便下次被访问，这样可提供系统性能。