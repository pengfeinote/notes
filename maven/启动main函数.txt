mvn exec:java -Dexec.mainClass="main函数所在类" -Drun.jvmArguments="jvm参数"  -Dexec.cleanupDaemonThreads=false

mvn exec:exec -Dexec.executable="java" -Dexec.args="jvm参数 -cp %classpath main函数类"

exec:exec与exec:java 的区别：
一：exec:exec总是比exec:java强大而灵活
二：exec:exec总是启动一个新的进程，并且在只剩下守护进程的时候从VM上退出(关闭应用程序)。而对于exec:java，当所有非守护线程结束时，守护线程会被joine或interrupt，应该程序不会关闭
三：You use mvn exec:java when you are working with java classes and want to run them in your JVM (with all project dependencies as classpath)(exec:java 运行的jvm就是maven的jvm), whilst mvn exec:exec allows you to run any executable (like shell script to do some cleanup or windows batch file), not only the java ones(exec:exec新起一个进程（jvm）)

如果你的工程启动非常简单，不需要设置jvm参数、系统属性、命令行参数，那么就用exec:java
如果恰恰相反，你的应用程序启动非常复杂，需要设置jvm参数、系统属性、命令行参数等，那么你就需要使用exec:exec了，

cleanupDaemonThreads :
Wether to interrupt/join and possibly stop the daemon threads upon 
quitting. If this is false, maven does nothing about the daemon threads. 
When maven has no more work to do, the VM will normally terminate any 
remaining daemon threads. 
In certain cases (in particular if maven is embedded), you might need to 
keep this enabled to make sure threads are properly cleaned up to ensure 
they don’t interfere with subsequent activity. In that case, see 
daemonThreadJoinTimeout and stopUnresponsiveDaemonThreads for further 
tuning.